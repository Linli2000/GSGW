{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\GSGW\\home\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\GSGW\\home\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\GSGW\\home\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\GSGW\\home\\src\\components\\home\\Cooperation.vue?vue&type=template&id=f4e8288a&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\GSGW\\home\\src\\components\\home\\Cooperation.vue","mtime":1573021539993},{"path":"C:\\Users\\Administrator\\Desktop\\GSGW\\home\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\GSGW\\home\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\GSGW\\home\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\GSGW\\home\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}